{"slots":{"0":{"name":"slot1","type":{"events":[],"methods":[]}},"1":{"name":"slot2","type":{"events":[],"methods":[]}},"2":{"name":"scr","type":{"events":[],"methods":[]}},"3":{"name":"slot4","type":{"events":[],"methods":[]}},"4":{"name":"slot5","type":{"events":[],"methods":[]}},"5":{"name":"slot6","type":{"events":[],"methods":[]}},"6":{"name":"slot7","type":{"events":[],"methods":[]}},"7":{"name":"slot8","type":{"events":[],"methods":[]}},"8":{"name":"slot9","type":{"events":[],"methods":[]}},"9":{"name":"core","type":{"events":[],"methods":[]}},"-1":{"name":"unit","type":{"events":[],"methods":[]}},"-2":{"name":"system","type":{"events":[],"methods":[]}},"-3":{"name":"library","type":{"events":[],"methods":[]}}},"handlers":[{"code":"unit.setTimer(\"updscr\",2)\nSkillContainerProficiency = 2 --export","filter":{"args":[],"signature":"start()","slotKey":"-1"},"key":"0"},{"code":"local Screen = scr --export\nlocal WhatFind = \"Pure\" --export Ore/Pure\nlocal Font = 5 --export\nTypeRes = 1\nResVol = 3\n\nif WhatFind == \"Ore\" then TypeRes = 1 \nelseif WhatFind == \"Pure\" then TypeRes = 2\nend\nif TypeRes == 1 then ResVol = 3 elseif\n    TypeRes == 2 then ResVol = 4\n    end\nFillConts()\nlocal html = [[<html><font size=]] .. Font .. [[><head> \n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n</head> <body bgcolor=\"#000000\">  <table border=\"10\" width=\"100%\" cellpadding=\"0\">\n<tr><th><font color=#00ff00>№</font></th>\n\t\t  <th><font color=#00ff00>Название</font></th>\n            <th><font color=#00ff00>Загрузка</font></th>\n\t\t  <th><font color=#00ff00>Заполнено %</font></th>\n\t\t</tr>]]\n\nfor i = 1, #libores do\n    result = SummaryOresInfo(libores[i][TypeRes])\n    color = \"#ffffff\"\n    if result ~= nil then\n        res =  math.floor(result[1] / libores[i][ResVol])\n        percentload = res/result[2]*100\n            if percentload>70 then color=\"#00dc74\"\n                elseif percentload>40 then color=\"#FFFF00\"\n                else color=\"#FF0000\"\n            end\n    if result[2] == 0 then percentload = 0 end\n    html = html\n    .. [[<tr><th>]] \n    .. i \n    .. [[</th><th>]]\n    .. libores[i][TypeRes]\n    .. [[</th><th><font color=]]\n    .. color\n    .. [[>]]\n    .. string.format(\"%.1f\",res/1000) .. [[ kL / ]]\n    .. string.format(\"%.1f\",result[2]/1000) .. [[ kL]] \n    .. [[</font></th><th> <font color=]]\n    .. color\n    .. [[>]]\n    .. string.format(\"%.1f\",percentload) .. [[%]]\n    .. [[</font></th></tr>]]\n        else\n        \n    html = html\n    .. [[<tr><th>]] \n    .. i \n    .. [[</th><th>]]\n    .. libores[i][TypeRes]\n    .. [[</th><th><font color=]]\n    .. color\n    .. [[>]]\n    .. \"--\" .. [[ / ]]\n    .. \"--\"\n    .. [[</font></th></tr>]]\n        end\n    result = nil\n    end\n    html = html .. [[</table> </body></font> </html>]]\nScreen.setHTML(html)","filter":{"args":[{"value":"updscr"}],"signature":"tick(timerId)","slotKey":"-1"},"key":"1"},{"code":"-- 1 Руда 2 Слитки 3 Вес руды кг/Л 4 Вес слитков кг/Л 5 Цветовой код\nlibores = {\n{\"Bauxite\",\"Aluminium\",1.28,2.7,\"#d6ffff\"},\n{\"Coal\",\"Carbon\",1.35,2.27,\"#d6ffff\"},\n{\"Quartz\",\"Silicon\",2.65,2.33,\"#68eeff\"},\n{\"Hematite\",\"Iron\",5.04,7.85,\"#00baff\"},\n{\"Natron\",\"Sodium\",1.55,0.97,\"#bff9fa\"},\n{\"Chromite\",\"Chromium\",4.54,7.19,\"#00a4f4\"},\n{\"Limestone\",\"Calcium\",2.71,1.55,\"#65e8f9\"},\n{\"Malachite\",\"Copper\",4,8.96,\"#0aadff\"},\n{\"Garnierite\",\"Nickel\",2.6,8.91,\"#68eeff\"},\n{\"Acanthite\",\"Silver\",7.2,10.49,\"#00dc74\"},\n{\"Petalite\",\"Lithium\",2.41,0.53,\"#96f6ff\"},\n{\"Pyrite\",\"Sulfur\",5.01,1.82,\"#00baff\"},\n{\"Cryolite\",\"Fluorine\",2.95,1.7,\"#40e0ff\"},\n{\"Cobaltite\",\"Cobalt\",6.33,8.9,\"#00c9ff\"},\n{\"Kolbeckite\",\"Scandium\",2.37,2.98,\"#96f6ff\"},\n{\"Gold Nuggets\",\"Gold\",19.3,19.3,\"#ff5b00\"},\n{\"Columbite\",\"Niobium\",5.38,8.57,\"#00c8ff\"},\n{\"Vanadinite\",\"Vanadium\",6.95,-6,\"#00dc74\"},\n{\"Illmenite\",\"Titanium\",4.55,4.51,\"#00a4f4\"},\n{\"Rhodonite\",\"Manganese\",3.76,7.21,\"#0bacfc\"},\n}","filter":{"args":[],"signature":"start()","slotKey":"-3"},"key":"2"},{"code":"elementsIds = core.getElementIdList()\ncontainers = {}\nfunction newContainer(_nameType, _sumvol,_summass)\n    local container = \n    {\n        name = _nameType;\n        oreMass = _summass;\n        volume = _sumvol;\n    }\n    return container\nend\n\nfunction getSelfMass(_id)\n    local selfHP = core.getElementHitPointsById(_id)\n    selfMass = 0\n    if selfHP==124 then selfMass=229.09\n    elseif selfHP==999 then selfMass=1281.31\n    elseif selfHP==7997 then selfMass=7421.35\n    elseif selfHP==17316 then selfMass=14842.7\n    end\n    return selfMass\nend\n\nfunction getSelfVolume(_id)\n    local selfHP = core.getElementHitPointsById(_id)\n    selfVol = 0\n    if \t  selfHP==124 then selfVol=1000\n    elseif selfHP==999 then selfVol=8000\n    elseif selfHP==7997 then selfVol=64000\n    elseif selfHP==17316 then selfVol=128000\n    end\n    return selfVol\nend\n\nfunction FillConts()\n    containers = {}\n    local volume = 0\n    for j = 1, #libores do\n        sumMass = 0\n        sumVol = 0\n        for i = 1, #elementsIds do\n            if core.getElementTypeById(elementsIds[i]) == \"container\"\n                and string.match(core.getElementNameById(elementsIds[i]),libores[j][TypeRes])\n                then \n\t\t\t\tif getSelfMass(elementsIds[i]) > 0 then\n                    sumMass = sumMass + (core.getElementMassById(elementsIds[i]) - getSelfMass(elementsIds[i]))\n                end\n                sumVol = sumVol + getSelfVolume(elementsIds[i])*(1+0.1*SkillContainerProficiency)\n            end\n        end\n        table.insert(containers, newContainer(libores[j][TypeRes],sumVol,sumMass))\n    end\nend\n\nfunction SummaryOresInfo (_type)\n    local containerContentsName=_type\n    local containerMassContentsCount = 0\n    local totalVolume = 0\n    for i = 1, #containers do\n        if string.match(containers[i].name,_type) then\n            containerMassContentsCount = containers[i].oreMass\n            totalVolume = containers[i].volume\n        end\n    end\n    return {containerMassContentsCount,totalVolume}\nend","filter":{"args":[],"signature":"start()","slotKey":"-3"},"key":"3"}],"methods":[],"events":[]}
